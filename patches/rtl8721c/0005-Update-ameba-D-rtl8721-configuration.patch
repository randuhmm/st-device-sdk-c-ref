From d66add38168f5626f0626ccf3647655b9d7f2a35 Mon Sep 17 00:00:00 2001
From: "baojun.luo" <baojun.luo@samsung.com>
Date: Sat, 16 Nov 2019 00:37:03 +0900
Subject: [PATCH] Update ameba-D rtl8721 configuration

Change-Id: Id13b1f12de82800daff0c03e18ecf0e1921df05f
Signed-off-by: baojun.luo <baojun.luo@samsung.com>
Signed-off-by: Feng <feng.song@samsung.com>
---
 .../common/api/platform/platform_stdlib_rtl8721d.h |   2 +-
 .../project_hp/asdk/Makefile.include.gen           |  35 ++++-
 .../GCC-RELEASE/project_hp/asdk/code_analyze.py    |   0
 .../GCC-RELEASE/project_hp/asdk/config.mk          |  69 +++++++++
 .../asdk/gnu_utility/image_tool/imagetool.sh       |   0
 .../GCC-RELEASE/project_hp/asdk/gnu_utility/pad.sh |   0
 .../project_hp/asdk/gnu_utility/prepend_header.sh  |   0
 .../project_hp/asdk/ld/rlx8721d_rom_symbol_acut.ld |   1 -
 .../GCC-RELEASE/project_hp/asdk/make/Makefile      |  14 +-
 .../GCC-RELEASE/project_hp/asdk/make/app/Makefile  |   3 +-
 .../project_hp/asdk/make/app/stdk_app/Makefile     |  39 +++++
 .../asdk/make/app/stdk_app/smart_switch/Makefile   |  41 ++++++
 .../project_hp/asdk/make/iot-core/Makefile         |  52 +++++++
 .../project_hp/asdk/make/libsodium/Makefile        |  76 ++++++++++
 .../project_hp/asdk/make/mbedtls_porting/Makefile  |  97 +++++++++++++
 .../project_hp/asdk/make/network/xip/Makefile      |   2 +-
 .../GCC-RELEASE/project_hp/asdk/make/ssl/Makefile  |   6 +-
 .../project_hp/asdk/make/ssl/openssl/Makefile      |  55 +++++++
 .../project_hp/asdk/make/utilities/Makefile        |   1 +
 .../GCC-RELEASE/project_lp/asdk/code_analyze.py    |   0
 .../asdk/gnu_utility/image_tool/imagetool.sh       |   0
 .../GCC-RELEASE/project_lp/asdk/gnu_utility/pad.sh |   0
 .../project_lp/asdk/gnu_utility/prepend_header.sh  |   0
 .../project_lp/asdk/ld/rlx8721d_rom_symbol_acut.ld |   1 -
 .../realtek_amebaD_va0_example/src/src_hp/main.c   | 161 ++-------------------
 25 files changed, 482 insertions(+), 173 deletions(-)
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/code_analyze.py
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/config.mk
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/image_tool/imagetool.sh
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/pad.sh
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/prepend_header.sh
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/Makefile
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/smart_switch/Makefile
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/iot-core/Makefile
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/libsodium/Makefile
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/mbedtls_porting/Makefile
 create mode 100644 project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/openssl/Makefile
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/code_analyze.py
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/image_tool/imagetool.sh
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/pad.sh
 mode change 100644 => 100755 project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/prepend_header.sh

diff --git a/component/common/api/platform/platform_stdlib_rtl8721d.h b/component/common/api/platform/platform_stdlib_rtl8721d.h
index e2706ba..40c75a5 100644
--- a/component/common/api/platform/platform_stdlib_rtl8721d.h
+++ b/component/common/api/platform/platform_stdlib_rtl8721d.h
@@ -2,7 +2,7 @@
 #define PLATFORM_STDLIB_8721D_H
 
 #define CONFIG_PLATFORM_AMEBA_X 1
-
+#define STD_PRINTF
 #if defined (__IARSTDLIB__)
 	#include <stdio.h>
 	#include <stdlib.h>
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/Makefile.include.gen b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/Makefile.include.gen
index 8c9e063..4739a5d 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/Makefile.include.gen
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/Makefile.include.gen
@@ -33,8 +33,8 @@ TOOLCHAINDIR	= $(ROOTDIR)/../toolchain
 
 OSDIR		= $(BASEDIR)/component/os
 FREERTOSDIR	= $(BASEDIR)/component/os/freertos/freertos_v10.2.0/Source
-SSLDIR		 = $(BASEDIR)/component/common/network/ssl/polarssl-1.3.8
-MBEDTLSDIR	 = $(BASEDIR)/component/common/network/ssl/mbedtls-2.4.0
+#SSLDIR		 = $(BASEDIR)/component/common/network/ssl/polarssl-1.3.8
+MBEDTLSDIR	 = $(BASEDIR)/component/common/network/ssl/mbedtls_porting
 
 #ROM code folder
 CMSISMATHLIBDIR  = $(BASEDIR)/component/soc/realtek/8711b/fwlib/test/ft_test/cmsis_math
@@ -189,6 +189,7 @@ IFLAGS               += -I$(BASEDIR)/component/common/network
 IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/src/include
 IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/src/include/lwip
 IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/src/include/netif
+IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/src/include/posix
 #IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/src/include/ipv4
 IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/port/realtek
 IFLAGS               += -I$(BASEDIR)/component/common/network/lwip/lwip_v2.0.2/port/realtek/freertos
@@ -205,11 +206,24 @@ IFLAGS               += -I$(BASEDIR)/component/common/drivers/inic/rtl8721d
 IFLAGS               += -I$(BASEDIR)/component/common/network/rtsp
 
 #SSL
-IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/polarssl-1.3.8/include
+#IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/polarssl-1.3.8/include
 IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/ssl_ram_map/rom
 
+#OPENSSL
+IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/openssl/include/
+IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/openssl/include/internal
+IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/openssl/include/platform
+
+#libsodium
+IFLAGS               += -I$(BASEDIR)/component/common/libsodium/include/
+IFLAGS               += -I$(BASEDIR)/component/common/libsodium/include/sodium/
+
+#cJson
+IFLAGS               += -I$(BASEDIR)/component/common/utilities/
+
 #MBEDTLS
-IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/mbedtls-2.4.0/include
+IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/mbedtls_porting/include
+IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/mbedtls_porting/include/mbedtls
 IFLAGS               += -I$(BASEDIR)/component/common/network/ssl/mbedtls_ram_map/rom
 IFLAGS               += -I$(BASEDIR)/component/common/application/amazon/amazon-freertos/lib/include/private
 
@@ -250,6 +264,13 @@ endif
 #BT config
 IFLAGS               += -I$(BASEDIR)/component/common/bluetooth/realtek/sdk/example/bt_config
 
+#iot core config
+include $(KM4_BUILDDIR)/asdk/config.mk
+ST_IOT_CORE_DIR = $(COMPONENT_PATH)
+include $(ST_IOT_CORE_DIR)/component.mk
+IFLAGS += $(CPPFLAGS)
+IFLAGS += -I$(PROJECT_PATH)
+IFLAGS += $(foreach inc,$(COMPONENT_ADD_INCLUDEDIRS), -I$(ST_IOT_CORE_DIR)/$(inc))
 
 #*****************************************************************************#
 #                             ARM ASSEMBLER FLAGS
@@ -343,8 +364,8 @@ GLOBAL_CFLAGS += -DCONFIG_USE_MBEDTLS_ROM_ALG
 GLOBAL_CFLAGS += -DCONFIG_FUNCION_O0_OPTIMIZE
 GLOBAL_CFLAGS += -DDM_ODM_SUPPORT_TYPE=32
 
-CPPFLAGS = $(GLOBAL_CFLAGS)
-CPPFLAGS += -std=c++11 -fno-use-cxa-atexit
+CXXFLAGS = $(GLOBAL_CFLAGS)
+CXXFLAGS += -std=c++11 -fno-use-cxa-atexit
 
 ifeq (${BUILD_TYPE},MFG)
 GLOBAL_CFLAGS += -DCONFIG_BT_MP
@@ -497,7 +518,7 @@ NETWORK_RENAME_CODE2SRAM:
 #              RULES TO GENERATE OBJECT FILE FROM .CPP FILE                   #
 #*****************************************************************************#
 %.o:%.cpp
-	$(CC) -ffunction-sections $(CPPFLAGS) $(MODULE_IFLAGS) $< -o $@
+	$(CC) -ffunction-sections $(CXXFLAGS) $(MODULE_IFLAGS) $< -o $@
 
 #*****************************************************************************#
 #              RULES TO GENERATE OBJECT FILE FROM .S FILE                     #
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/code_analyze.py b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/code_analyze.py
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/config.mk b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/config.mk
new file mode 100644
index 0000000..cf54b26
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/config.mk
@@ -0,0 +1,69 @@
+########################################
+# Config
+########################################
+
+#/* For STDK */
+CONFIG_STDK_IOT_CORE=y
+CONFIG_STDK_IOT_CORE_USE_MBEDTLS=y
+CONFIG_STDK_IOT_CORE_NET_MBEDTLS=y
+CONFIG_STDK_IOT_CORE_EASYSETUP_HTTP=y
+CONFIG_LWIP_USE_HTTPD_FOR_EASYSETUP=y
+CONFIG_STDK_IOT_CORE_BSP_SUPPORT_RTL8721C=y
+CONFIG_STDK_IOT_CORE_OS_SUPPORT_FREERTOS=y
+CONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_ED25519=y
+
+ifeq ($(CONFIG_STDK_IOT_CORE),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_USE_MBEDTLS),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_USE_MBEDTLS
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_NET_MBEDTLS),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_NET_MBEDTLS
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_EASYSETUP_HTTP),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_EASYSETUP_HTTP
+endif
+
+ifeq ($(CONFIG_LWIP_USE_HTTPD_FOR_EASYSETUP),y)
+GLOBAL_CFLAGS += -DCONFIG_LWIP_USE_HTTPD_FOR_EASYSETUP
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_BSP_SUPPORT_RTL8721C),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_BSP_SUPPORT_RTL8721C
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_OS_SUPPORT_FREERTOS),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_OS_SUPPORT_FREERTOS
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_SECURITY_BACKEND_SOFTWARE),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_SECURITY_BACKEND_SOFTWARE
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_ED25519),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_ED25519
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_SUPPORT_STNV_PARTITION),y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_SUPPORT_STNV_PARTITION
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_LOG_LEVEL_WARN), y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_LOG_LEVEL_WARN
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_LOG_LEVEL_INFO), y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_LOG_LEVEL_INFO
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_LOG_LEVEL_ERROR), y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_LOG_LEVEL_ERROR
+endif
+
+ifeq ($(CONFIG_STDK_IOT_CORE_LOG_LEVEL_DEBUG), y)
+GLOBAL_CFLAGS += -DCONFIG_STDK_IOT_CORE_LOG_LEVEL_DEBUG
+endif
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/image_tool/imagetool.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/image_tool/imagetool.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/pad.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/pad.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/prepend_header.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/gnu_utility/prepend_header.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/ld/rlx8721d_rom_symbol_acut.ld b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/ld/rlx8721d_rom_symbol_acut.ld
index fc93b61..08e8b57 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/ld/rlx8721d_rom_symbol_acut.ld
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/ld/rlx8721d_rom_symbol_acut.ld
@@ -314,7 +314,6 @@ SECTIONS
     _strtok = 0x1011201d;
     __strtok_r = 0x10112029;
     _strtok_r = 0x1011208d;
-    _strtol_r = 0x10112095;
     _strtol = 0x101121b1;
     _strtoul_r = 0x101121b5;
     _strtoul = 0x101122e9;
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/Makefile
index 128d0a8..397bd81 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/Makefile
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/Makefile
@@ -22,16 +22,11 @@ endif
 	@make -C test all
 	@make -C os all
 
-ifeq ($(CONFIG_MBED_TLS_ENABLED),y)
-	@make -C mbedtls all
-endif
-
 ifeq ($(CONFIG_GUI_EN),y)
 	@make -C ui all
 endif
 
 	#@make -C bootloader all
-	@make -C app all
 	@make -C target all
 	@make -C drivers all
 	@make -C cmsis all
@@ -44,6 +39,12 @@ endif
 	@make -C project all
 	@make -C application all
 	#@make -C cmsis-dsp all
+	@make -C mbedtls_porting all
+	@make -C ssl all
+	@make -C libsodium all
+	@make -C iot-core prerequirement
+	@make -C iot-core all
+	@make -C app all
 #*****************************************************************************#
 #              CLEAN GENERATED FILES                                          #
 #*****************************************************************************#
@@ -74,4 +75,7 @@ clean:
 	@make -C project clean
 	@make -C ui clean
 	@make -C media clean
+	@make -C mbedtls_porting clean
+	@make -C libsodium clean
+	@make -C iot-core clean
 -include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/Makefile
index b226eff..6a968a2 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/Makefile
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/Makefile
@@ -17,7 +17,7 @@ OBJS =
 all: CORE_TARGETS
 	make -C monitor all
 	make -C touch_key all
-
+	make -C stdk_app all
 #*****************************************************************************#
 #              GENERATE OBJECT FILE 
 #*****************************************************************************#
@@ -32,3 +32,4 @@ CORE_TARGETS: $(OBJS)
 clean: 
 	make -C monitor clean
 	make -C touch_key clean
+	make -C stdk_app clean
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/Makefile
new file mode 100644
index 0000000..aeb0449
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/Makefile
@@ -0,0 +1,39 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+ST_IOT_CORE_DIR = $(COMPONENT_PATH)
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+APP_C += $(wildcard $(PROJECT_PATH)/main/*.c)
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(APP_C:%.c=%.o)
+
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+
+# Define the Rules to build the core targets
+all: CORE_TARGETS  COPY_RAM_OBJS
+#*****************************************************************************#
+#              GENERATE OBJECT FILE	#
+#*****************************************************************************#
+CORE_TARGETS:$(OBJS)
+
+#*****************************************************************************#
+#                        RULES TO CLEAN TARGETS                               #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/smart_switch/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/smart_switch/Makefile
new file mode 100644
index 0000000..de43fe6
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/app/stdk_app/smart_switch/Makefile
@@ -0,0 +1,41 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+DIR = $(PROJECT_PATH)/main/
+ST_IOT_CORE_DIR = $(COMPONENT_PATH)
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+#APP_C += $(foreach srcdir,$(DIR),$(wildcard $(DIR)/$(srcdir)/*.c))
+APP_C = $(wildcard $(DIR)/*.c)
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(APP_C:%.c=%.o)
+
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+
+# Define the Rules to build the core targets
+all: CORE_TARGETS  COPY_RAM_OBJS
+#*****************************************************************************#
+#              GENERATE OBJECT FILE	#
+#*****************************************************************************#
+CORE_TARGETS:$(OBJS)
+
+#*****************************************************************************#
+#                        RULES TO CLEAN TARGETS                               #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/iot-core/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/iot-core/Makefile
new file mode 100644
index 0000000..4782477
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/iot-core/Makefile
@@ -0,0 +1,52 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+ST_IOT_CORE_DIR = $(COMPONENT_PATH)
+IOT_CORE_EXCLUDE_C += $(ST_IOT_CORE_DIR)/easysetup/http/lwip_httpd/fsdata_custom.c
+
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+IOT_CORE_C += $(foreach srcdir,$(COMPONENT_SRCDIRS),$(wildcard $(ST_IOT_CORE_DIR)/$(srcdir)/*.c))
+SRC_C += $(filter-out $(IOT_CORE_EXCLUDE_C), $(IOT_CORE_C))
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(SRC_C:%.c=%.o)
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+-include $(OBJS:.o=.d)
+# Define the Rules to build the core targets
+all: CORE_TARGETS COPY_RAM_OBJS
+#*****************************************************************************#
+#              GENERATE OBJECT FILE	#
+#*****************************************************************************#
+.PHONY: prerequirement
+prerequirement:
+	cp $(PROJECT_PATH)/main/onboarding_config.json ./
+	cp $(PROJECT_PATH)/main/device_info.json ./
+	$(FROMELF) -I binary -O elf32-littlearm -B arm onboarding_config.json $(PROJECT_PATH)/main/onboarding_config.json.o
+	$(FROMELF) -I binary -O elf32-littlearm -B arm device_info.json $(PROJECT_PATH)/main/device_info.json.o
+	rm ./onboarding_config.json
+	rm ./device_info.json
+
+OBJS += $(PROJECT_PATH)/main/onboarding_config.json.o
+OBJS += $(PROJECT_PATH)/main/device_info.json.o
+
+CORE_TARGETS: $(OBJS)
+#*****************************************************************************#
+#                        RULES TO CLEAN TARGETS                               #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/libsodium/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/libsodium/Makefile
new file mode 100644
index 0000000..525dea5
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/libsodium/Makefile
@@ -0,0 +1,76 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+DIR = $(BASEDIR)/component/common/libsodium/
+
+vpath %.c $(DIR)
+
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+CSRC = $(DIR)/sodium/core.c \
+       $(DIR)/sodium/codecs.c \
+       $(DIR)/sodium/utils.c \
+       $(DIR)/crypto_box/crypto_box.c \
+       $(DIR)/crypto_box/crypto_box_easy.c \
+       $(DIR)/crypto_box/crypto_box_seal.c \
+       $(DIR)/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c \
+       $(DIR)/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c \
+       $(DIR)/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c \
+       $(DIR)/crypto_core/ed25519/ref10/ed25519_ref10.c \
+       $(DIR)/crypto_core/ed25519/core_ed25519.c \
+       $(DIR)/crypto_scalarmult/crypto_scalarmult.c \
+       $(DIR)/crypto_scalarmult/curve25519/ref10/x25519_ref10.c \
+       $(DIR)/crypto_scalarmult/curve25519/scalarmult_curve25519.c \
+       $(DIR)/crypto_hash/crypto_hash.c \
+       $(DIR)/crypto_hash/sha256/hash_sha256.c \
+       $(DIR)/crypto_hash/sha256/cp/hash_sha256_cp.c \
+       $(DIR)/crypto_hash/sha512/hash_sha512.c \
+       $(DIR)/crypto_hash/sha512/cp/hash_sha512_cp.c \
+       $(DIR)/crypto_sign/crypto_sign.c \
+       $(DIR)/crypto_sign/ed25519/sign_ed25519.c \
+       $(DIR)/crypto_sign/ed25519/ref10/keypair.c \
+       $(DIR)/crypto_sign/ed25519/ref10/open.c \
+       $(DIR)/crypto_sign/ed25519/ref10/sign.c \
+       $(DIR)/crypto_sign/ed25519/ref10/obsolete.c \
+       $(DIR)/crypto_verify/sodium/verify.c \
+       $(DIR)/crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c \
+       $(DIR)/randombytes/randombytes.c
+
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(CSRC:.c=.o)
+
+#*****************************************************************************#
+#                               Include Dependency                            #
+#*****************************************************************************#
+-include $(OBJS:.o=.d)
+
+
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+# Define the Rules to build the core targets
+all: CORE_TARGETS COPY_RAM_OBJS
+
+#*****************************************************************************#
+#              GENERATE OBJECT FILE	#
+#*****************************************************************************#
+CORE_TARGETS: $(OBJS)
+
+#*****************************************************************************#
+#              CLEAN GENERATED FILES                                          #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/mbedtls_porting/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/mbedtls_porting/Makefile
new file mode 100644
index 0000000..fa7a774
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/mbedtls_porting/Makefile
@@ -0,0 +1,97 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+DIR = $(BASEDIR)/component/common/network/ssl/mbedtls_porting/
+
+vpath %.c $(DIR)
+
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+CSRC = $(DIR)/library/base64.c	\
+		$(DIR)/library/sha256.c	\
+		$(DIR)/library/ctr_drbg.c	\
+		$(DIR)/library/ecdh.c	\
+		$(DIR)/library/ecp.c	\
+		$(DIR)/library/entropy.c	\
+		$(DIR)/library/bignum.c	\
+		$(DIR)/library/aes.c	\
+		$(DIR)/library/sha512.c	\
+		$(DIR)/library/entropy_poll.c	\
+		$(DIR)/library/ecp_curves.c	\
+		$(DIR)/library/timing.c	\
+		$(DIR)/library/pkparse.c	\
+		$(DIR)/library/pk.c	\
+		$(DIR)/library/asn1parse.c	\
+		$(DIR)/library/rsa.c	\
+		$(DIR)/library/oid.c	\
+		$(DIR)/library/pkcs12.c	\
+		$(DIR)/library/pem.c	\
+		$(DIR)/library/md.c	\
+		$(DIR)/library/rsa_internal.c	\
+		$(DIR)/library/cipher.c	\
+		$(DIR)/library/pkcs5.c	\
+		$(DIR)/library/arc4.c	\
+		$(DIR)/library/md5.c	\
+		$(DIR)/library/des.c	\
+		$(DIR)/library/pk_wrap.c	\
+		$(DIR)/library/gcm.c	\
+		$(DIR)/library/cipher_wrap.c	\
+		$(DIR)/library/ecdsa.c	\
+		$(DIR)/library/ccm.c	\
+		$(DIR)/library/camellia.c	\
+		$(DIR)/library/blowfish.c	\
+		$(DIR)/library/hmac_drbg.c	\
+		$(DIR)/library/asn1write.c	\
+		$(DIR)/library/md_wrap.c	\
+		$(DIR)/library/ripemd160.c	\
+		$(DIR)/library/sha1.c	\
+		$(DIR)/library/x509_crt.c	\
+		$(DIR)/library/x509.c	\
+		$(DIR)/library/ssl_tls.c	\
+		$(DIR)/library/debug.c	\
+		$(DIR)/library/dhm.c	\
+		$(DIR)/library/ssl_cli.c	\
+		$(DIR)/library/ssl_srv.c	\
+		$(DIR)/library/ssl_ciphersuites.c	\
+		$(DIR)/library/net_sockets.c	\
+		$(DIR)/port/rtl8710/net.c	\
+		$(DIR)/port/rtl8710/rtl_hardware.c	\
+
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(CSRC:.c=.o)
+
+#*****************************************************************************#
+#                               Include Dependency                            #
+#*****************************************************************************#
+-include $(OBJS:.o=.d)
+
+
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+# Define the Rules to build the core targets
+all: CORE_TARGETS COPY_RAM_OBJS
+
+#*****************************************************************************#
+#              GENERATE OBJECT FILE	#
+#*****************************************************************************#
+CORE_TARGETS: $(OBJS)
+
+#*****************************************************************************#
+#              CLEAN GENERATED FILES                                          #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/network/xip/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/network/xip/Makefile
index ffc8aa0..c18519f 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/network/xip/Makefile
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/network/xip/Makefile
@@ -14,7 +14,7 @@ NETWORK = $(BASEDIR)/component/common/network
 #                               Source FILE LIST                              #
 #*****************************************************************************#
 OBJS +=	\
-		$(NETWORK)/sntp/sntp.o\
+		$(LWIPDIR)/src/apps/sntp/sntp.o \
 		$(NETWORK)/websocket/wsserver_tls.o\
 		$(NETWORK)/websocket/wsclient_tls.o\
 		$(NETWORK)/coap/sn_coap_ameba_port.o\
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/Makefile
index 0217ded..751d7d0 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/Makefile
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/Makefile
@@ -7,12 +7,10 @@ include $(MAKE_INCLUDE_GEN)
 #*****************************************************************************#
 #                               VARIABLES	                              #
 #*****************************************************************************#
-
 #*****************************************************************************#
 #                               Source FILE LIST                              #
 #*****************************************************************************#
 OBJS =
-
 #*****************************************************************************#
 #                               Include Dependency                            #
 #*****************************************************************************#
@@ -23,7 +21,7 @@ OBJS =
 #                        RULES TO GENERATE TARGETS                            #
 #*****************************************************************************#
 all: CORE_TARGETS COPY_RAM_OBJS
-	make -C polarssl-1.3.8 all
+	make -C openssl all
 #*****************************************************************************#
 #              GENERATE OBJECT FILE 
 #*****************************************************************************#
@@ -33,6 +31,6 @@ CORE_TARGETS: $(OBJS)
 #              CLEAN GENERATED FILES                                          #
 #*****************************************************************************#
 clean: CLEAN_OBJS 
-	make -C polarssl-1.3.8 clean
+	make -C openssl clean
 
 -include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/openssl/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/openssl/Makefile
new file mode 100644
index 0000000..683cf27
--- /dev/null
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/ssl/openssl/Makefile
@@ -0,0 +1,55 @@
+
+include $(MAKE_INCLUDE_GEN)
+
+.PHONY: all clean
+
+#*****************************************************************************#
+#                               VARIABLES	                              #
+#*****************************************************************************#
+DIR = $(BASEDIR)/component/common/network/ssl/openssl/source/
+
+vpath %.c $(DIR)
+
+#*****************************************************************************#
+#                               Source FILE LIST                              #
+#*****************************************************************************#
+CSRC = $(DIR)/library/ssl_cert.c		\
+		$(DIR)/library/ssl_lib.c			\
+		$(DIR)/library/ssl_methods.c		\
+		$(DIR)/library/ssl_pkey.c		\
+		$(DIR)/library/ssl_stack.c		\
+		$(DIR)/library/ssl_x509.c		\
+		$(DIR)/platform/ssl_pm.c		\
+		$(DIR)/platform/ssl_pm_extend.c	\
+
+#*****************************************************************************#
+#                               Object FILE LIST                              #
+#*****************************************************************************#
+OBJS = $(CSRC:.c=.o)
+
+#*****************************************************************************#
+#                               Include Dependency                            #
+#*****************************************************************************#
+-include $(OBJS:.o=.d)
+
+#*****************************************************************************#
+#                        RULES TO GENERATE TARGETS                            #
+#*****************************************************************************#
+# Define the Rules to build the core targets
+all: CORE_TARGETS COPY_RAM_OBJS
+
+#*****************************************************************************#
+#				GENERATE OBJECT FILE									#
+#*****************************************************************************#
+CORE_TARGETS: $(OBJS)
+
+#*****************************************************************************#
+#              CLEAN GENERATED FILES                                          #
+#*****************************************************************************#
+clean: CLEAN_OBJS
+	$(REMOVE) *.o
+	$(REMOVE) *.i
+	$(REMOVE) *.s
+	$(REMOVE) *.d
+
+-include $(DEPS)
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/utilities/Makefile b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/utilities/Makefile
index 30f70b9..5804a05 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/utilities/Makefile
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_hp/asdk/make/utilities/Makefile
@@ -20,6 +20,7 @@ CSRC +=  \
 	$(DIR)/ssl_client_ext.c \
 	$(DIR)/http_client.c \
 	$(DIR)/xml.c \
+	$(DIR)/cJSON.c \
 	#$(DIR)/webserver.c
 
 #*****************************************************************************#
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/code_analyze.py b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/code_analyze.py
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/image_tool/imagetool.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/image_tool/imagetool.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/pad.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/pad.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/prepend_header.sh b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/gnu_utility/prepend_header.sh
old mode 100644
new mode 100755
diff --git a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/ld/rlx8721d_rom_symbol_acut.ld b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/ld/rlx8721d_rom_symbol_acut.ld
index 8400fa9..8a9cc80 100644
--- a/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/ld/rlx8721d_rom_symbol_acut.ld
+++ b/project/realtek_amebaD_va0_example/GCC-RELEASE/project_lp/asdk/ld/rlx8721d_rom_symbol_acut.ld
@@ -262,7 +262,6 @@ SECTIONS
     _strtok = 0x76f5;
     __strtok_r = 0x7705;
     _strtok_r = 0x7761;
-    _strtol_r = 0x776d;
     _strtol = 0x7899;
     _strtoul_r = 0x78a1;
     _strtoul = 0x79d9;
diff --git a/project/realtek_amebaD_va0_example/src/src_hp/main.c b/project/realtek_amebaD_va0_example/src/src_hp/main.c
index d9fe342..a484cb0 100644
--- a/project/realtek_amebaD_va0_example/src/src_hp/main.c
+++ b/project/realtek_amebaD_va0_example/src/src_hp/main.c
@@ -2,164 +2,21 @@
 #include "ameba_soc.h"
 #include "main.h"
 
-#if defined(CONFIG_FTL_ENABLED)
-#include "ftl_int.h"
-extern const u8 ftl_phy_page_num;
-extern const u32 ftl_phy_page_start_addr;
-
-void app_ftl_init(void)
+extern void app_main(void);
+static void user_init_entry(void *arg)
 {
-	ftl_init(ftl_phy_page_start_addr, ftl_phy_page_num);
+	printf("user_init_entry...\r\n");
+	// Call app_main() to start user application
+	app_main();
+	vTaskDelete(NULL);
 }
-#endif
-
-#if defined(CONFIG_WIFI_NORMAL) && defined(CONFIG_NETWORK)
-extern VOID wlan_network(VOID);
-extern u32 GlobalDebugEnable;
-#endif
-void app_captouch_init(void);
-void app_keyscan_init(u8 reset_status);
-
-void app_init_debug(void)
-{
-	u32 debug[4];
-
-	debug[LEVEL_ERROR] = BIT(MODULE_BOOT);
-	debug[LEVEL_WARN]  = 0x0;
-	debug[LEVEL_INFO]  = BIT(MODULE_BOOT);
-	debug[LEVEL_TRACE] = 0x0;
-
-	debug[LEVEL_ERROR] = 0xFFFFFFFF;
-
-	LOG_MASK(LEVEL_ERROR, debug[LEVEL_ERROR]);
-	LOG_MASK(LEVEL_WARN, debug[LEVEL_WARN]);
-	LOG_MASK(LEVEL_INFO, debug[LEVEL_INFO]);
-	LOG_MASK(LEVEL_TRACE, debug[LEVEL_TRACE]);
-}
-
-static void* app_mbedtls_calloc_func(size_t nelements, size_t elementSize)
-{
-	size_t size;
-	void *ptr = NULL;
-
-	size = nelements * elementSize;
-	ptr = pvPortMalloc(size);
-
-	if(ptr)
-		_memset(ptr, 0, size);
-
-	return ptr;
-}
-
-void app_mbedtls_rom_init(void)
-{
-	mbedtls_platform_set_calloc_free(app_mbedtls_calloc_func, vPortFree);
-	//rom_ssl_ram_map.use_hw_crypto_func = 1;
-	rtl_cryptoEngine_init();
-}
-
-VOID app_start_autoicg(VOID)
-{
-	u32 temp = 0;
-	
-	temp = HAL_READ32(SYSTEM_CTRL_BASE_HP, REG_HS_PLATFORM_PARA);
-	temp |= BIT_HSYS_PLFM_AUTO_ICG_EN;
-	HAL_WRITE32(SYSTEM_CTRL_BASE_HP, REG_HS_PLATFORM_PARA, temp);
-}
-
-VOID app_pmu_init(VOID)
-{
-	if (BKUP_Read(BKUP_REG0) & BIT_SW_SIM_RSVD){
-		return;
-	}
-
-	pmu_set_sleep_type(SLEEP_PG);
-
-	/* if wake from deepsleep, that means we have released wakelock last time */
-	//if (SOCPS_DsleepWakeStatusGet() == TRUE) {
-	//	pmu_set_sysactive_time(2);
-	//	pmu_release_wakelock(PMU_OS);
-	//	pmu_tickless_debug(ENABLE);
-	//}	
-}
-
-/* enable or disable BT shared memory */
-/* if enable, KM4 can access it as SRAM */
-/* if disable, just BT can access it */
-/* 0x100E_0000	0x100E_FFFF	64K */
-VOID app_shared_btmem(u32 NewStatus)
-{
-	u32 temp = HAL_READ32(SYSTEM_CTRL_BASE_HP, REG_HS_PLATFORM_PARA);
-
-	if (NewStatus == ENABLE) {
-		temp |= BIT_HSYS_SHARE_BT_MEM;
-	} else {
-		temp &= ~BIT_HSYS_SHARE_BT_MEM;
-	}	
-	
-	HAL_WRITE32(SYSTEM_CTRL_BASE_HP, REG_HS_PLATFORM_PARA, temp);
-}
-
 
 //default main
 int main(void)
 {
-	if (wifi_config.wifi_ultra_low_power &&
-		wifi_config.wifi_app_ctrl_tdma == FALSE) {
-		SystemSetCpuClk(CLK_KM4_100M);
-	}	
-	InterruptRegister(IPC_INTHandler, IPC_IRQ, (u32)IPCM0_DEV, 5);
-	InterruptEn(IPC_IRQ, 5);
-
-#ifdef CONFIG_MBED_TLS_ENABLED
-	app_mbedtls_rom_init();
-#endif
-	//app_init_debug();
-
-	/* init console */
-	shell_recv_all_data_onetime = 1;
-	shell_init_rom(0, 0);	
-	shell_init_ram();
-	ipc_table_init();
-
-	/* Register Log Uart Callback function */
-	InterruptRegister((IRQ_FUN) shell_uart_irq_rom, UART_LOG_IRQ, (u32)NULL, 5);
-	InterruptEn(UART_LOG_IRQ,5);
-
-#ifdef CONFIG_FTL_ENABLED
-	app_ftl_init();
-#endif
-
-#if defined(CONFIG_WIFI_NORMAL) && defined(CONFIG_NETWORK)
-	rtw_efuse_boot_write();
-
-	/* pre-processor of application example */
-	pre_example_entry();
-
-	wlan_network();
-	
-	/* Execute application example */
-	example_entry();
-#endif
-
-#if defined(CONFIG_EQC) && CONFIG_EQC
-	//EQC_test_entry();
-#endif
-	app_start_autoicg();
-	//app_shared_btmem(ENABLE);
-
-	app_pmu_init();
-
-	if ((BKUP_Read(0) & BIT_KEY_ENABLE))
-		app_keyscan_init(FALSE); /* 5uA */
-	if ((BKUP_Read(0) & BIT_CAPTOUCH_ENABLE))
-		app_captouch_init(); /* 1uA */
-	//if ((BKUP_Read(0) & BIT_GPIO_ENABLE))
-	//	app_hp_jack_init(); 
-	
-	app_init_debug();
-
-	//DBG_8195A("M4U:%d \n", RTIM_GetCount(TIMM05));
+	extern unsigned int GlobalDebugEnable;
+	GlobalDebugEnable = 1;
+	xTaskCreate(user_init_entry, "user_init_entry", 8192, NULL, 10, NULL);
 	/* Enable Schedule, Start Kernel */
 	vTaskStartScheduler();
 }
-- 
2.7.4

